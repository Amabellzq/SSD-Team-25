version: '3.8'

services:
  web:
    build: .
    container_name: flask
    command: bash -c "while [ ! -f /app/.env ]; do sleep 1; done && gunicorn --bind 0.0.0.0:8000 run:app"
    volumes:
      - .:/app
    networks:
      - ecommerce_network
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - ecommerce_network
    volumes:
      - ./static:/app/static
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /path/to/ssl/certs:/etc/ssl/certs
      - /path/to/ssl/private:/etc/ssl/private

  db:
    image: mysql:5.7
    container_name: mysql
    env_file:
      - .env
    ports:
      - "3306:3306"
    networks:
      - ecommerce_network
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_USER_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
    networks:
      - ecommerce_network
    environment:
      JENKINS_OPTS: --httpPort=8080
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  ecommerce_network:
    driver: bridge

volumes:
  jenkins_home:
